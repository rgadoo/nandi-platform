version: '3.8'

services:
  nandi-postgres:
    image: postgres:14
    container_name: nandi-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nandi_db
      - POSTGRES_USER=nandi
      - POSTGRES_PASSWORD=nandi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/nandi_schema.sql:/docker-entrypoint-initdb.d/nandi_schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nandi -d nandi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  nandi-redis:
    image: redis:6
    container_name: nandi-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass nandi_redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nandi-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nandi-pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@nandi.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - nandi-postgres

  nandi-api:
    build: 
      context: ./nandi-api
      dockerfile: Dockerfile
    image: nandi/api:latest
    container_name: nandi-api
    ports:
      - "9080:9080"
    environment:
      - POSTGRES_HOST=nandi-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=nandi_db
      - POSTGRES_USER=nandi
      - POSTGRES_PASSWORD=nandi_password
      - REDIS_HOST=nandi-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=nandi_redis_password
      - AI_SERVICE_URL=http://nandi-ai-service:8000
      - NANDI_AI_SERVICE_API_KEY=development-key
    depends_on:
      nandi-postgres:
        condition: service_healthy
      nandi-redis:
        condition: service_healthy

  nandi-ai-service:
    build:
      context: ./nandi-ai-service
      dockerfile: Dockerfile
    image: nandi/ai-service:latest
    container_name: nandi-ai-service
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=nandi-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=nandi_redis_password
      - API_KEY=development-key
    depends_on:
      nandi-redis:
        condition: service_healthy

  nandi-frontend:
    build:
      context: ./nandi-frontend
      dockerfile: Dockerfile
    image: nandi/frontend:latest
    container_name: nandi-frontend
    ports:
      - "80:80"
    environment:
      - API_URL=http://nandi-api:9080
    depends_on:
      - nandi-api

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: 